@model ElectricityDefect.WebUI.Models.TemplateViewModel
<script>

    function TemplateParametersInfo(e)
    {
        var window = $("#window").data("kendoWindow");
        window.center().open();
    }

    function SaveTemplate(e)
    {
        var validator = $("#mail-template").kendoValidator().data("kendoValidator");

        if (validator.validate())
        {
            var editor = $("#template-editor").data("kendoEditor");
            var editorContents = editor.encodedValue();
            var subject = $("#subject").val();
            var multiSelect = $("#recipients").data("kendoMultiSelect");
            var recipients = multiSelect.value();
            $.ajax({
                type: "POST",
                url: "@Url.Action("SaveTemplate", "TemplateService")",
                datatype: 'json',
                data: { recipients: recipients, subject: subject, body: editorContents },
                success: function (data) {

                    if (data.message == "OK") {

                        showSuccess("Шаблон успешно сохранён!")

                    }
                    else {

                        showError(data.errors);

                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {

                    showError(thrownError + "-" + xhr.status);
                }
            });
        }
    }
    //Add new recipient in multiselect
    function addNew(value) {
        var widget = $("#recipients").getKendoMultiSelect();
        var dataSource = widget.dataSource;
        dataSource.data().push(value);
        widget.value(widget.value().concat([value]));
        widget.close();
    }

</script>
<script id="noDataTemplate" type="text/x-kendo-tmpl">
    #var value= instance.input.val(); #
    <div>
      Хотите добавить нового получателя - '#: value #'?
    </div>
    </br>
    <button class="k-button k-button-solid-base k-button-solid k-button-md k-rounded-md k-primary" onclick="addNew('#: value #')" ontouchend="addNew('#: value #')">Добавить</button>
</script>
<div style="margin-left:auto;margin-right:auto;max-width:80%;height:86vh;">
    <form id="mail-template">
        <fieldset class="k-form-fieldset k-widget">
            <legend class="k-form-legend" style="padding-left:15px;">Шаблон письма рассылки</legend>
            <div class="k-form-field">
                <label class="k-label k-form-label" for="recipients">Получатели:</label>
                <div class="k-form-field-wrap">
                    @Html.Kendo().MultiSelectFor(m => m.recipients).AutoBind(false).NoDataTemplateId("noDataTemplate").BindTo(Model.recipients).HtmlAttributes(new { style = "width:100%;" })
                </div>
            </div>
            <div class="k-form-field">
                <label class="k-label k-form-label" for="host">Тема:</label>
                <div class="k-form-field-wrap">
                    @Html.Kendo().TextBoxFor(m => m.subject).HtmlAttributes(new { style = "width:100%;" })
                </div>
            </div>

        </fieldset>
    </form>
    <div class="k-form-field">
        @(Html.Kendo().EditorFor(m=>m.body)
                                                                                  .Name("template-editor")
                                                                                  .Tools(tools => tools.Clear()
                                                                                    //.CustomTemplate(save => save.Template("" + Html.Kendo().Button().Name("temlate-save").Icon("save").HtmlAttributes(new { @class = "k-primary" }).Content("Сохранить").Events(ev => ev.Click("SaveTemplate")).ToClientTemplate()))
                                                                                    .Separator()
                                                                                    .Bold().Italic().Underline()
                                                                                    .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                                                                                     .Indent().Outdent()
                                                                                     .Separator()
                                                                                    .InsertUnorderedList().InsertOrderedList()
                                                                                    .Separator()
                                                                                    .InsertImage().CreateLink().Unlink()
                                                                                    .Separator()
                                                                                    .FontColor().FontName().FontSize()
                                                                                    .Separator()

                                                                                    //.Print()
                                                                                    //.Pdf()
                                                                                    //.Separator()
                                                                                    .TableEditing()
                                                                                    .Separator()
                                                                                    .CustomTemplate(save => save.Template("" + Html.Kendo().Button().Name("temlate-parameters").HtmlAttributes( new { title= "Доступные параметры"}).Icon("question").Events(ev => ev.Click("TemplateParametersInfo")).ToClientTemplate()))

                        )
                        .ImageBrowser(imageBrowser => imageBrowser
                        .Image("~/Content/Images/{0}")
                        .Read("Read", "ImageBrowser")
                        .Create("Create", "ImageBrowser")
                        .Destroy("Destroy", "ImageBrowser")
                        .Upload("Upload", "ImageBrowser")
                        .Thumbnail("Thumbnail", "ImageBrowser")
                        )
                        .Messages(ms=>ms.ImageBrowser(br=>br.UploadFile("Загрузить").OrderBy("Сортировать")))
                        //.Pdf(pdf => pdf
                        //      .Margin(20, 20, 20, 20)
                        //      //.PaperSize("A4")
                        //      //.Scale(0.7)
                        //      .FileName("DSV.pdf")

                        // )
                        //.Messages(mes => mes.FontNameInherit("Arial Default").FontSizeInherit("7pt"))
                        .HtmlAttributes(new { style ="height: 100%;", aria_label = "editor" })
                        .Resizable(r=>r.Content(true))
                        //.StyleSheets(css => css.Add(Url.Content("~/Content/editor.css")))
                        //.Value(Model.body)

                        )


        <div class="form-actions">
            @Html.Kendo().Button().Name("SaveTemlate").Tag("div").HtmlAttributes(new { type = "button", @class = "k-primary" }).Icon("check").Content("Сохранить").Events(click => click.Click("SaveTemplate"))
        </div>

    </div>
</div>
<div>
    @(Html.Kendo().Window()
            .Name("window")
            .Title("Доступные параметры")
            .LoadContentFrom("AvailableParameters", "TemplateService")
            .Draggable()
            //.Events(ev => ev.Close("onClose"))
    )
</div>
